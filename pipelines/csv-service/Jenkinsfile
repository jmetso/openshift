node('maven') {

  stage ('Checkout') {
      git 'https://github.com/jmetso/csv-service.git' 
  }
    
  stage ('Prepare') {
      sh 'oc create -f openshift/csv-s2i-build.yaml -n myproject'
  }

  stage ('Maven build') {
      // Run the maven build
      sh "mvn clean package"
  }
  
  stage ('Openshift build') {
     openshiftBuild apiURL: '', authToken: '', bldCfg: 'csv-s2i-build', buildName: '', checkForTriggeredDeployments: 'false', commitID: '', namespace: 'myproject', showBuildLogs: 'false', verbose: 'false', waitTime: '', waitUnit: 'sec'  }
     openshiftVerifyBuild apiURL: '', authToken: '', bldCfg: 'csv-s2i-build', checkForTriggeredDeployments: 'false', namespace: 'myproject', verbose: 'false', waitTime: ''
  }
  
  stage ('Deploy to Test') {
      sh "oc create -f openshift/csv-dc.yaml -n myproject"
      openshiftDeploy apiURL: '', authToken: '', depCfg: 'csv-service', namespace: 'myproject', verbose: 'false', waitTime: '', waitUnit: 'sec'
      openshiftVerifyDeployment apiURL: '', authToken: '', depCfg: 'csv-service', namespace: 'myproject', replicaCount: '1', verbose: 'false', verifyReplicaCount: 'false', waitTime: '', waitUnit: 'sec'
  }

  stage ('Tag image to test ready') {
      // openshiftTag alias: 'false', apiURL: '', authToken: '', destStream: 'csv-s2i-build', destTag: 'testReady', destinationAuthToken: '', destinationNamespace: 'myproject', namespace: 'myproject', srcStream: 'csv-s2i-build', srcTag: 'latest', verbose: 'false'
  }

  stage ('Run QA test') {
  }

  stage ('Tag image to prod ready') {
      input 'Tag ProdReady?'
      // openshiftTag alias: 'false', apiURL: '', authToken: '', destStream: 'csv-s2i-build', destTag: 'prodReady', destinationAuthToken: '', destinationNamespace: 'myproject', namespace: 'myproject', srcStream: 'csv-s2i-build', srcTag: 'latest', verbose: 'false'
  }

  stage ('Deploy to Prod') {
  }
}
